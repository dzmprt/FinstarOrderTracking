// <auto-generated />
using System;
using FOT.DatabaseInfrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FOT.DatabaseInfrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251005184610_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "citext");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FOT.Application.Common.Notifications.DomainEventOutbox", b =>
                {
                    b.Property<int>("DomainEventOutboxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DomainEventOutboxId"));

                    b.Property<string>("AggregateId")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("citext");

                    b.Property<string>("AggregateType")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("citext");

                    b.Property<string>("EventCode")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("citext");

                    b.Property<DateTime>("OccurredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("citext");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("DomainEventOutboxId");

                    b.ToTable("DomainEventOutboxNotifications");
                });

            modelBuilder.Entity("FOT.Domain.Orders.Order", b =>
                {
                    b.Property<Guid>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("citext");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("OrderNumber");

                    b.ToTable("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
